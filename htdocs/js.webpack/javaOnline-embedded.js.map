{"version":3,"file":"javaOnline-embedded.js","mappings":";yBAAA,IAAYA,GAAZ,SAAYA,GACR,+BAEA,yCACA,mCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,wCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,IAAAA,EAAS,KAsMd,IC1LKC,EAERC,EDwLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,s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","sources":["webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\n\n\nexport class LongClass extends Klass {\n\n    unboxableAs = [];\n\n    constructor(baseClass: Klass) {\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\n        this.baseClass = baseClass;\n\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n    }\n\n    canCastTo(type: Type): boolean{\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\n    }\n\n    init() {\n\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = parameters[1].value;\n\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = Number.parseInt(parameters[1].value);\n\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\n\n\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                let v0 = parameters[0].value;\n                let v1 = parameters[1].value;\n                if (v0 > v1) return 1;\n                if (v0 < v1) return -1;\n                return 0;\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\n\n        this.addMethod(new Method(\"equals\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n                return parameters[0].value == parameters[1].value;\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return \"\" + parameters[0].value;\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\n        ]), longPrimitiveType,\n            (parameters) => {\n                return parameters[0].value;\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\n\n        this.addMethod(new Method(\"signum\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Math.sign(parameters[1].value);\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\n\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(2);\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(16);\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(8);\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value).toString();\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return parameters[1].value;\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\n\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\n\n    }\n\n    public debugOutput(value: Value): string {\n        return \"\" + <number>value.value;\n    }\n\n\n}\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if(switchStatement.defaultDestination == null){\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                    case \"Robot\":\r\n                        if([\"pause\", \"warten\"].indexOf(method.identifier) >= 0){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","export class CacheManager {\n    \n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\n        if(databaseId == null){callback(null); return;}\n        let that = this;\n        if(!this.cacheAvailable()) callback(null);\n        this.getCache((cache) => {\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\n                (value)=>{\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\n                })\n                .catch(() => callback(null));\n        })        \n    }\n\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\n        if(!this.cacheAvailable()) return;\n        let that = this;\n        this.getCache((cache) => {\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\n        })        \n    }\n\n    cacheAvailable(): boolean {\n        return 'caches' in self;\n    }\n\n    getCache(callback: (cache: Cache) => void) {\n        caches.open('my-cache').then(callback);\n    }\n\n    databaseIdToCacheIdentifier(databaseId: number): string {\n        return \"/onlineIdeTemplateDb\" + databaseId;\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    // sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch)=> ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput(){\r\n        this.timerStopped = true;\r\n        this.oldState = this.state;\r\n        this.setState(InterpreterState.waitingForInput);\r\n        this.showProgramPointerAndVariables();\r\n    }\r\n\r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false){\r\n        if(popPriorValue) this.stack.pop();\r\n        if(value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch); \r\n    }\r\n\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\n\nexport class FilledShapeDefaults {\n    static defaultFillColor: number = 0x8080ff;\n    static defaultFillAlpha: number = 1.0;\n\n    static defaultBorderColor: number = null;\n    static defaultBorderAlpha: number = 1.0;\n    static defaultBorderWidth: number = 10;\n\n    static defaultVisibility: boolean = true;\n\n    static initDefaultValues(){\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\n    \n        FilledShapeDefaults.defaultBorderColor = null;\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\n        FilledShapeDefaults.defaultBorderWidth = 10;\n\n        FilledShapeDefaults.defaultVisibility = true;\n    }\n\n    static setDefaultVisibility(visibility: boolean) {\n        FilledShapeDefaults.defaultVisibility = visibility;\n    }\n\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\n\n        FilledShapeDefaults.defaultBorderWidth = width;\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultBorderColor = c.color;\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultBorderColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\n        }\n\n    }\n\n    static setDefaultFillColor(color: string | number, alpha?: number) {\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultFillColor = c.color;\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultFillColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\n        }\n\n    }\n\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n \r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n        this.setBaseClass(objectType);\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(objectType);\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n    \n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number) {\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"src/client/main/MainBase.js\";\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\n\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\n\nexport type DatabaseDirectoryEntry = {\n    name: string,\n    description: string,\n    filename: string\n}\n\nexport type QueryResult = {\n    columns: string[],\n    values: any[][],\n    buffer?: Uint8Array\n}\n\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\nexport type QueryErrorCallback = (error: string) => void;\n\nexport type ColumnStructure = {\n    name: string;\n    table: TableStructure;\n\n    typeLengths?: number[]; // for varchar(5), ...\n    completeTypeSQL: string;\n\n    references?: ColumnStructure;\n    referencesRawData?: any[];\n    isPrimaryKey: boolean;\n    isAutoIncrement: boolean;\n\n    notNull: boolean;\n    defaultValue: string;\n\n    dumpValueFunction?: (any) => string\n}\n\nexport type TableStructure = {\n    name: string;\n    size: number;\n    columns: ColumnStructure[];\n    completeSQL: string;\n}\n\nexport type DatabaseStructure = {\n    tables: TableStructure[]\n}\n\n\nexport class DatabaseTool {\n\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\n\n    worker: Worker;\n\n    queryId: number = 0;\n\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\n\n    databaseStructure: DatabaseStructure;\n\n    constructor(private main: MainBase){\n\n    }\n\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\n        \n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\n        \n            if (this.worker != null) {\n            this.worker.terminate();\n        }\n\n        let t = performance.now();\n\n        // console.log(\"Starting worker...\");\n\n        let url: string = \"js/tools/database/sqljsWorker.js\"\n        if(this.main.isEmbedded()){\n            //@ts-ignore\n            url = window.javaOnlineDir + url;\n        }\n\n        //@ts-ignore\n        if(window.jo_doc){\n            //@ts-ignore\n            this.worker = new WorkerSim();\n        } else {\n            this.worker = new Worker(url);\n        }\n        let that = this;\n\n        let error: string;\n\n        this.worker.onmessage = () => {\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\n            that.worker.onmessage = event => {\n\n                // console.log(event.data);\n\n                let id = event.data.id;\n                if (event.data.error == null) {\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\n                    if (querySuccessCallback != null) {\n                        querySuccessCallback(event.data.results);\n                    }\n                } else {\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\n                    if (queryErrorCallback != null) {\n                        queryErrorCallback(event.data.error);\n                    }\n                }\n\n                // if(event.data.buffer){\n                //     console.log(event.data.buffer);\n                // }\n\n\n                this.queryErrorCallbackMap.delete(id);\n                this.querySuccessCallbacksMap.delete(id);\n\n            };\n\n            if(queries == null) queries = [];\n            queries = queries.slice();\n            let queryCount = queries.length;\n\n            let execQuery = () => {\n                if (queries.length > 0) {\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\n                    let query = queries.shift();\n                    that.executeQuery(query, (result) => {\n                        execQuery();\n                    }, (error) => {\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\n                        console.log()\n                        execQuery();\n                    })\n                } else {\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\n                   \n                }\n            }\n\n            execQuery();\n\n        };\n\n        this.worker.onerror = (e) => {\n            error = (\"Worker error: \" + e.error);\n            console.log(\"Worker error: \" + e.error);\n        }\n\n        this.worker.postMessage({\n            id: that.queryId++,\n            action: \"open\",\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\n        });\n\n    }\n\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\n\n        let id = this.queryId++;\n\n        this.querySuccessCallbacksMap.set(id, successCallback);\n        this.queryErrorCallbackMap.set(id, errorCallback);\n\n        this.worker.postMessage({\n            id: id,\n            action: \"exec\",\n            sql: query,\n            params: {}\n        });\n\n    }\n\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\n\n        if(queries.length == 0){\n            successCallback()\n            return;\n        }\n\n        let query = queries.shift();\n\n        this.executeQuery(query, () => {\n            this.executeWriteQueries(queries, successCallback, errorCallback);\n        }, (message) => {\n            this.executeWriteQueries(queries, successCallback, (error) => {});\n            errorCallback(message); // report first error\n        });\n\n    }\n\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\n\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\n        let zlibMagicByte: number = 0x78;\n\n        let found: boolean = true;\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\n            if (sqliteMagicBytes[i] != dump[i]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) return \"binaryUncompressed\";\n\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\n\n        return \"other\";\n\n    }\n\n    close(){\n        if(this.worker != null){\n            this.worker.terminate();\n            this.worker = null;\n        }\n    }\n\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !this.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { ConnectionHelper } from \"./Connection.js\";\nimport { ResultsetHelper } from \"./ResultSet.js\";\n\n\nexport class DatabasePreparedStatementClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\n\n\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\n        ]), resultSetType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let query: string = parameters[1].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput();\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.throwException(error);\n                    return null;\n                }\n\n\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    let rsh = new ResultsetHelper(result);\n                    let rs = new RuntimeObject(resultSetType);\n                    rs.intrinsicData[\"Helper\"] = rsh;\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\n            false));\n\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let query: string = parameters[1].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput();\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.throwException(error);\n                    return null;\n                }\n\n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\n            false));\n\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\n\n        for (let type of types) {\n\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\n\n\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), voidPrimitiveType,\n                (parameters) => {\n\n                    let o: RuntimeObject = parameters[0].value;\n                    let index: number = parameters[1].value;\n                    let value: any = parameters[2].value;\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                    let error = psh.setValue(value, index);\n                    if (error != null) {\n                        module.main.getInterpreter().throwException(error);\n                    }\n\n                    return;\n\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\n        }\n    }\n\n}\n\n\nexport class PreparedStatementHelper {\n\n    parameterValues: string[];\n    parameterPositions: number[];\n\n    constructor(public connectionHelper: ConnectionHelper, public query: string) {\n        query = query.trim();\n        this.prepareStatement(query);\n    }\n\n    prepareStatement(sql: string) {\n\n        let insideQuotation: boolean = false;\n        this.parameterPositions = [];\n\n        for (let i = 0; i < sql.length; i++) {\n\n            let c = sql.charAt[i];\n            switch (c) {\n                case \"'\": insideQuotation = !insideQuotation;\n                    break;\n                case \"?\": if (!insideQuotation) {\n                    this.parameterPositions.push(i);\n                }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        this.parameterValues = new Array(this.parameterPositions.length);\n\n    }\n\n    setValue(value: any, position: number): string {\n        if (position < 1 || position > this.parameterPositions.length) {\n            if (this.parameterPositions.length == 0) {\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\n            }\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\n        }\n\n        if (typeof value == \"string\") {\n            value = value.replace(/'/g, \"''\");\n            this.parameterValues[position - 1] = value;\n            return;\n        }\n\n        this.parameterValues[position - 1] = \"\" + value;\n        return;\n    }\n\n    checkQuery(): string {\n        return null;\n    }\n\n    getQueryWithParameterValuesFilledIn(): string {\n        let query = this.query;\n        let queryParts: string[] = [];\n        let pos = 0;\n\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\n            pos = this.parameterPositions[i] + 1;\n        }\n\n        if (pos < query.length) {\n            queryParts.push(query.substring(pos));\n        }\n\n        let queryWithParameterValues = \"\";\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\n        }\n\n        if (queryParts.length > this.parameterPositions.length) {\n            queryWithParameterValues += queryParts[queryParts.length - 1];\n        }\n\n        return queryWithParameterValues;\n    }\n\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                this.token = token;\r\n                this.databaseData = dbData;\r\n                this.database = new DatabaseTool(this.main);\r\n                this.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    this.longPollingListener = new DatabaseLongPollingListener(this.main.networkManager,\r\n                        this.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            this.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    this.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) return;\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    this.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore.concat([query]), (error: string) => {\r\n                        if (error != null) callback(error, 0);\r\n                        if (!retrieveLastRowId) {\r\n                            callback(null, 0);\r\n                            return;\r\n                        }\r\n                        this.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                            callback(null, data.values[0][0]);\r\n                        })\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null, results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').addClass('notranslate').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"names":["TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","Type","constructor","onlyFirstPass","usagePositions","Map","documentation","toTokenType","clearUsagePositions","this","PrimitiveType","initialValue","description","equals","type","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","Attribute","name","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","p","parameters","hasGenericTypes","implements","m","length","i","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","value","compute","firstOperand","secondOperand","castTo","computeId","s","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","position","registerSwitchStatement","switchStatement","push","insertJumpNode","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","set","removeNode","n","indexOf","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","get","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","module","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","c","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","filterText","command","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","replace","pushStaticInitializationPrograms","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","error","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","Math","min","shouldImplement","checkInheritance","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","lengthAttribute","referenceElement","array","destType","s1","ObjectClass","IntPrimitiveType","init","longPrimitiveType","negation","automatic","needsStatement","charPrimitiveType","String","fromCharCode","trunc","StringPrimitiveType","stringClass","forEach","declaration","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","RegExp","match","strings","split","values","longConstant","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","red","green","blue","alpha","m2","m3","ColorHelper","static","predefinedColors","substr","CompilerStatus","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","t","pushError","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","Promise","resolve","deleteOverlappingRanges","e","e1","splice","delta","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","key","keys","cssColors","style","setProperty","highlightColor","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","parse","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","expect","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","getGraphicsDiv","showProgramEnd","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements_before","new_version","DebuggerElement","caption","children","isOpen","getLevel","getIndent","render","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","$childContainer","removeAllChildren","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","evaluate","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","modules","toExportedModule","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","$div","addDiv","subHeading","placeholder","buttons","$buttonRow","button","waitMessage","$message","close","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","firstWorkspace","wse","text_before_revision","submitted_date","student_edited_after_revision","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","enabled","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","Helper","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","enable","disable","showData","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","registerAction","active","isActive","setActive","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","showNode","initGUI","printProgram","printModuleToBottomDiv","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","programHasMethodCalls","executeInStepMode","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","showTab","consoleTop","commandEntry","resultEntry","detachValues","ce","showError","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","clearErrors","clearExceptions","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","showHomeWorkRevisionButton","hideHomeworkRevisionButton","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","showHideDbBusyIcon","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","getCompiler","provideColorPresentations","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","resolveRenameLocation","currentlyEditedModule","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","setInterpreter","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","getSpeedInStepsPerSecond","stepsPerSecond","setSpeedInStepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","cbs","checkboxState","changed","newLibs","lib","used","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","helperHistory","repositoryButtonDone","stop","nonSystemModules","newFileHelperDone","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","setSize","adjustSizeAndElements","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","getRoutingRectangle","appendTo","withRaster","adjustToRaster","moveTo","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","alignment","bold","italics","$group","textPosYCm","maxWidthCm","center","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","$selectElement","selected","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","adjustWidthToWorld","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","Sliders","initSliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","getRightDiv","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","Interpreter","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","prototype","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","initEditor","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","gamepad","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","oldState","popPriorValue","actionId","clearActorLists","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","getCollidingShapes","groupHelper","collidingShapes","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","groupHelperCopy","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","KeyClass","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","patch","patches","new","patchedText","KeyEvent","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","Float32Array","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","db","SQL1","SQL","createDb","worker","err","buff","results","exec","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","querySuccessCallback","queryErrorCallback","execQuery","shift","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","checkQuery","getQueryWithParameterValuesFilledIn","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","BaseModule","GNGModule","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","getFirstModule","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}