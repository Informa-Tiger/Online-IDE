{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/compiler/types/TypeHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","PrimitiveType","initialValue","description","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","program","signature","id","parameters","hasGenericTypes","canCastTo","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","shouldImplement","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","Infinity","charPrimitiveType","charCodeAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","voidPrimitiveType","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","m1","red","green","blue","alpha","m2","m3","LexerState","ColorHelper","predefinedColors","substr","colorLexer","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","foundToken","openBracket","char","specialCharToken","pushToken","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","splice","delta","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","TypeResolver","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","setBaseClass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","collectionInterface","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","ListHelper","getIteratorMethod","iteratorWithError","execute","objWithError","nextMethod","hasNextMethod","iteratorAsValue","isInteger","executeImmediatelyInNewStackframe","iterableInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","adAll","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","networkManager","unsentMessages","connect","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","sendUpdates","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","evaluator","libaries","Workspace","restoreFromData","currentFileId","currentlyOpenModule","toExportedModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","Dialog","$dialog","$dialogMain","$div","colorStyle","placeholder","$buttonRow","button","$message","ischecked","$checkbox","$description","prop","is","dialog","init","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","waitMessage","buttons","close","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","text_before_revision","submitted_date","student_edited_after_revision","sendCreateFile","setWorkspaceActive","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","getCompiler","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","rejectReason","resourceEdits","usagePositionsInModule","$userSettingsButton","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","disconnect","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","sourceFrame","destinationFrame","Container","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","polygonBerührtPolygonExakt","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroupAndSetDefaultVisibility","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","SpriteHelper","prefix","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"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BhC8H,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAlMJ,CAAYA,MAAS,KAqMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,E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,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI,GAAJ,QACvB,EAAKzf,UAAUyf,QAAQ,IAAI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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                        if(method.identifier == \"pause\"){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { response } from \"express\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues(){\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n    \r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            \r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n        \r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n                    \r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n                    \r\n                    if(this.interpreter.pauseUntil != null){\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n            \r\n            this.summedDelta = 0;\r\n            \r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n            \r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            this.app.renderer.render(this.stage, {\r\n                renderTexture: rt,\r\n                transform: transform\r\n            });            \r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n        \r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if(fontFamily != null){\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"workspace.json\");\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}