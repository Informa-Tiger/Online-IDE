{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","m1","red","green","blue","alpha","m2","m3","LexerState","ColorHelper","predefinedColors","substr","colorLexer","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","foundToken","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","splice","delta","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","TypeResolver","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","doForceUpdate","sendUpdates","$rect","css","sendDataToServer","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","alert","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","evaluator","libaries","Workspace","restoreFromData","currentFileId","currentlyOpenModule","toExportedModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","Dialog","$dialog","$dialogMain","$div","colorStyle","placeholder","$buttonRow","button","$message","ischecked","$checkbox","$description","prop","is","dialog","init","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","waitMessage","buttons","close","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","text_before_revision","submitted_date","student_edited_after_revision","sendCreateFile","setWorkspaceActive","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","getCompiler","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","rejectReason","resourceEdits","usagePositionsInModule","$userSettingsButton","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","filename","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","location","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","sourceFrame","destinationFrame","Container","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","parseColorToOpenGL","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","SpriteHelper","prefix","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","client","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","turtleX","turtleY","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","bracketColorizationOptions","main1","methodAST","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhMJ,CAAYA,MAAS,KAmMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK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UmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,GAAJ,QACvB,EAAKnmB,UAAUmmB,QAAQ,IAAI,G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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String) {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();                \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            this.next();\r\n        }\r\n\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) >= 0) {\r\n            this.next();\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if ([\"\\n\", \"\\r\"].indexOf(char) >= 0){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                while([\"\\n\", \"\\r\"].indexOf(this.currentChar) >= 0){\r\n                    this.next();\r\n                }\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let doForceUpdate = counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number){\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value/(duration/20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if(value < 0){\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string) {\r\n    var blob = new Blob([JSON.stringify(obj)], {type: 'text/plain'});\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else{\r\n        var e = document.createEvent('MouseEvents'),\r\n        a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let f of files) {\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>reader.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile((ws).toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if(!(stack[stackTop - 1].type instanceof PrimitiveType)){\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if(object.value instanceof RuntimeObject){\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            debugger;\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n        \r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n                    \r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n            \r\n            this.summedDelta = 0;\r\n            \r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n            \r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            this.app.renderer.render(this.stage, {\r\n                renderTexture: rt,\r\n                transform: transform\r\n            });            \r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n            this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string|number) {\r\n        let c: number;\r\n        if(typeof color == 'string'){\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if(this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i <= toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if(fontFamily != null){\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    turtleX: number = -1;\r\n    turtleY: number = -1;\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n        this.turtleX = 0;\r\n        this.turtleY = 0;\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n        this.turtleX = x;\r\n        this.turtleY = y;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear() {\r\n        this.lineElements = [];\r\n        this.lineElements.push({\r\n            x: 100,\r\n            y: 200,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.turtleAngleDeg = 0;\r\n        this.lastTurtleAngleDeg = 0;\r\n        this.borderColor = 0;\r\n        this.turtleSize = 40;\r\n        this.render();\r\n        this.moveTurtleTo(100, 200, 0);\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.private, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.private, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.private, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.private, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear();\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n    \r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if(!this.config.hideStartPanel){\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n    \r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n    \r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if(this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if(this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if(this.config.withBottomPanel == null){\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if(this.config.hideEditor){\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.withBottomPanel){\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if(this.config.speed == null) this.config.speed = 9;\r\n        if(this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if(this.config.hideEditor){\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if(!this.config.hideEditor){\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if(this.config.hideEditor){\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if(!this.config.hideStartPanel){\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if(this.config.hideStartPanel){\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }        \r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if(!this.config.hideEditor){\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n            \r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n                \r\n                $vd.append(this.$debuggerDiv, $alternativeText);\r\n                let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n                $tabs.append(this.$runDiv, $vd);\r\n                this.$rightDivInner.append($tabs);\r\n                makeTabs($rightDiv);\r\n            } else {\r\n                this.$rightDivInner.append(this.$runDiv);\r\n            }\r\n        \r\n        return $rightDiv;\r\n    }\r\n    \r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}