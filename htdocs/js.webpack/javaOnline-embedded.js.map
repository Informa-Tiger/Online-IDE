{"version":3,"file":"javaOnline-embedded.js","mappings":";yBAAA,IAAYA,GAAZ,SAAYA,GACR,+BAEA,yCACA,mCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,wCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,8DACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,6BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBApMJ,CAAYA,IAAAA,EAAS,KAuMd,IC3LKC,EAERC,EDyLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,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","sources":["webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/tools/CacheManager.ts","webpack:///../src/client/spritemanager/SpritesheetData.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    divisionAssignmentInteger, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n    isFinal: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n    hasAttributes() {\r\n        return this.numberOfAttributesIncludingBaseClass > 0;\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if(attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object?.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n        charPrimitiveType.identifier = 'char';\r\n        let valueOfParameterTypes: Type[] = [new ArrayType(charPrimitiveType), charPrimitiveType, intPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType, longPrimitiveType, floatPrimitiveType];\r\n\r\n        for( let parameterType of valueOfParameterTypes){\r\n            this.addMethod(new Method(\"valueOf\", new Parameterlist([{identifier: \"value\", type: parameterType, declaration: null, usagePositions: null, isFinal: false}]),\r\n            stringPrimitiveType, (parameters) => {\r\n\r\n                let p = parameters[1].value;\r\n                if(p == null) return \"null\";\r\n                \r\n                if(Array.isArray(p)){\r\n                    return p.map((value: Value) => value.value).join(\"\");\r\n                }\r\n\r\n                return \"\" + p;\r\n\r\n            }, false, true, \"Wandelt den Parameter in eine Zeichenkette um\", false\r\n            \r\n            ))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\n\n\nexport class LongClass extends Klass {\n\n    unboxableAs = [];\n\n    constructor(baseClass: Klass) {\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\n        this.baseClass = baseClass;\n\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n    }\n\n    canCastTo(type: Type): boolean{\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\n    }\n\n    init() {\n\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = parameters[1].value;\n\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = Number.parseInt(parameters[1].value);\n\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\n\n\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                let v0 = parameters[0].value;\n                let v1 = parameters[1].value;\n                if (v0 > v1) return 1;\n                if (v0 < v1) return -1;\n                return 0;\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\n\n        this.addMethod(new Method(\"equals\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n                return parameters[0].value == parameters[1].value;\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return \"\" + parameters[0].value;\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\n        ]), longPrimitiveType,\n            (parameters) => {\n                return parameters[0].value;\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\n\n        this.addMethod(new Method(\"signum\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Math.sign(parameters[1].value);\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\n\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(2);\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(16);\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(8);\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value).toString();\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return parameters[1].value;\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\n\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\n\n    }\n\n    public debugOutput(value: Value): string {\n        return \"\" + <number>value.value;\n    }\n\n\n}\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor, TokenType.keywordWhile].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n\r\n    setEnumValues(enumValueNodes: EnumValueNode[]) {\r\n\r\n        this.enumInfoList = [];\r\n        this.identifierToInfoMap = {};\r\n        this.indexToInfoMap = {};\r\n\r\n        this.valueList = null;\r\n\r\n        this.staticClass.attributes = this.staticClass.attributes.filter((a) => a.annotation != \"@enumvalue\");\r\n        this.staticClass.attributeMap = new Map();\r\n        this.staticClass.attributes.forEach((a) => this.attributeMap.set(a.identifier, a));\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n            attribute.annotation = \"@enumvalue\";\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: this.module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(this.module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if (this.module.isSystemModule) {\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for (let ei of this.enumInfoList) {\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        this.setEnumValues(enumValueNodes);\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if(baseClass != null){\r\n            if (baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n                this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n            }\r\n            if(baseClass.isFinal){\r\n                this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist final, daher kann sie keine Unterklasse haben.\", classNode.position);\r\n            }\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null && method != null) {\r\n            this.checkIfMethodIsVirtual(method, klass);\r\n            this.checkIfMethodOverridesFinalMethod(method, klass, methodNode.position);\r\n        }\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method, klass: Klass | StaticClass) {\r\n        for (let mo of this.moduleStore.getModules(false)) {\r\n            for (let c of mo.typeStore.typeList) {\r\n                if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                    for (let m of c.methods) {\r\n                        if (m != null && method != null && m.signature == method.signature) {\r\n                            method.isVirtual = true;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIfMethodOverridesFinalMethod(method: Method, klass: Klass | StaticClass, position: TextPosition){\r\n        if(klass instanceof StaticClass) return;\r\n\r\n        let baseClass = klass.baseClass;\r\n        while(baseClass != null){\r\n            for(let m of baseClass.methods){\r\n                if(m.identifier == method.identifier && (m.isFinal || m.visibility == Visibility.private) && m.signature == method.signature){\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" überschreibt die gleichnamige private oder finale Methode der Oberklasse \" + baseClass.identifier, position);\r\n                }\r\n            }\r\n            baseClass = baseClass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if (switchStatement.defaultDestination == null) {\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if (collectionType.typeVariables.length == 0) {\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean) {\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal || this.currentSymbolTable.method.isConstructor };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface &&\r\n                (node.object[\"object\"] != null || node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)) {\r\n            let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n            switch (classIdentifier) {\r\n                case \"Input\":\r\n                    this.pushStatements({\r\n                        type: TokenType.callInputMethod,\r\n                        method: method,\r\n                        position: node.position,\r\n                        stepFinished: true,\r\n                        stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                    });\r\n                    isSystemMethod = true;\r\n                    break;\r\n                case \"SystemTools\":\r\n                case \"Robot\":\r\n                    if ([\"pause\", \"warten\"].indexOf(method.identifier) >= 0) {\r\n                        this.pushStatements([{\r\n                            type: TokenType.setPauseDuration,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }, {\r\n                            type: TokenType.pause,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }\r\n                        ]);\r\n                        isSystemMethod = true;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            if(node.operator == TokenType.divisionAssignment && leftType.type == intPrimitiveType){\r\n                node.operator = TokenType.divisionAssignmentInteger;\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens)\r\n            .concat(TokenType.keywordAbstract).concat(Parser.ClassTokens).concat([TokenType.keywordFinal]);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.parseArrayBracketsAfterVariableIdentifier(type);\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseArrayBracketsAfterVariableIdentifier(type: TypeNode){\r\n        //@ts-ignore\r\n        if(this.tt == TokenType.leftRightSquareBracket && type != null){\r\n            if(type.arrayDimension > 0){\r\n                this.pushError(\"Sowohl vor als auch hinter dem Bezeichner der Variablendeklaration steht []. Eines davon ist zuviel.\");\r\n            } \r\n            while(this.tt == TokenType.leftRightSquareBracket){\r\n                type.arrayDimension++;\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    this.parseArrayBracketsAfterVariableIdentifier(type);\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n\r\n                this.nextToken();\r\n\r\n                this.parseArrayBracketsAfterVariableIdentifier(type);\r\n\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        let modules = this.moduleStore.getModules(true);\r\n\r\n        for (let module of modules) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null && !otherModule.isSystemModule) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.isFinal = mn.isFinal;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            c.isFinal = cdn.isFinal;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"set\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let element: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.set(index, element);\r\n\r\n            }, false, false, \"Ersetzt das Element an Position index der Liste durch das übergebene Element; gibt das vorherige Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\", \"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => { }, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if (object.intrinsicData[\"ListHelper\"] instanceof ListHelper) {\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => { return { type: v.type, value: v.value } }));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if (getIteratorMethod == null) {\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if (getIteratorMethod.invoke) {\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{ value: object, type: object.class }]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (hasNextMethod.invoke([iteratorAsValue])) {\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{ value: object, type: object.class }]);\r\n            if (iteratorWithError.error != null) { this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false; }\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (true) {\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if (hasNext.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false; }\r\n                if (hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if (objWithError.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false; }\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({ value: obj, type: type });\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): { error: string, value: Value } {\r\n        if (method.invoke) {\r\n            return { value: { value: method.invoke([]), type: method.returnType }, error: null };\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if (index == null) {\r\n            this.valueArray.push({ type: r.type, value: r.value });\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if (index <= this.objectArray.length && index >= 0) {\r\n                this.valueArray.splice(index, 0, { type: r.type, value: r.value });\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    set(index: number, r: Value): boolean {\r\n        if (index < this.objectArray.length && index >= 0) {\r\n            let oldValue = this.objectArray[index];\r\n            this.valueArray[index] = { type: r.type, value: r.value };\r\n            this.objectArray[index] = r.value;\r\n            return oldValue;\r\n        } else {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n\r\n    removeLast_or_error() {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({ type: object.type, value: object.value });\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, { type: object.type, value: object.value });\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","export class CacheManager {\n    \n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\n        if(databaseId == null){callback(null); return;}\n        let that = this;\n        if(!this.cacheAvailable()) callback(null);\n        this.getCache((cache) => {\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\n                (value)=>{\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\n                })\n                .catch(() => callback(null));\n        })        \n    }\n\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\n        if(!this.cacheAvailable()) return;\n        let that = this;\n        this.getCache((cache) => {\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\n        })        \n    }\n\n    cacheAvailable(): boolean {\n        return 'caches' in self;\n    }\n\n    getCache(callback: (cache: Cache) => void) {\n        caches.open('my-cache').then(callback);\n    }\n\n    databaseIdToCacheIdentifier(databaseId: number): string {\n        return \"/onlineIdeTemplateDb\" + databaseId;\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n        w.spritesheetId = remoteWorkspace.spritesheetId;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    initHtml(){\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n        }\r\n\r\n        let valueType = this.value?.type;\r\n        if(valueType != null){\r\n            // show compound types in own branch of visible tree\r\n            if (valueType instanceof ArrayType ||\r\n                (valueType instanceof Klass && !(valueType instanceof Enum) && valueType != stringPrimitiveType && valueType.hasAttributes())\r\n                || valueType instanceof StaticClass\r\n                || valueType instanceof Interface\r\n            ) {\r\n                if(!this.canOpen || this.type != valueType){\r\n                    this.type = valueType;\r\n                    this.$debuggerElement.find(\".jo_deChildContainer\").remove();\r\n                    this.canOpen = true;\r\n                    this.$debuggerElement.addClass('jo_canOpen');\r\n                    this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n        \r\n                    this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                        if (this.value != null && this.value.value != null) {\r\n                            if (this.children.length == 0) {\r\n                                this.onFirstOpening();\r\n                            }\r\n                            this.$debuggerElement.toggleClass('jo_expanded');\r\n                            this.isOpen = !this.isOpen;\r\n                        } else {\r\n                            this.children = [];\r\n                        }\r\n        \r\n                        event.stopPropagation();\r\n        \r\n                    });\r\n                }\r\n    \r\n            } else {\r\n                this.canOpen = false;\r\n                this.$debuggerElement.removeClass('jo_canOpen');\r\n                this.$debuggerElement.find(\".jo_deChildContainer\").remove();\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateChildValues(){\r\n        if (this.type instanceof Klass && this.children.length > 0) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper == null) {\r\n                let childIndex = 0;\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    this.children[childIndex++].value = ro.getValue(a.index);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children = [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        this.initHtml();\r\n\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n                let typeIdentifier = this.value?.type?.identifier;\r\n                if(typeIdentifier != null){\r\n                    if([\"String\", \"Integer\", \"Boolean\", \"Double\", \"Float\"].indexOf(typeIdentifier) < 0){\r\n                        s = \"<span class='jo_debugger_classidentifier'>\" + typeIdentifier + \"</span>\";\r\n                    }\r\n                }\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n        this.updateChildValues();\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }, $parentDiv?: JQuery<HTMLElement>): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    if($parentDiv != null){\r\n        $parentDiv.append(div);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    spritesheetId: number;\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings),\r\n            spritesheetId: this.spritesheetId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        w.spritesheetId = ws.spritesheetId;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if (insertIndex == $elements.length) {\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", (event) => {\r\n                contextmenuHandler(event);\r\n        }, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if (destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    static getVolume: () => number = () => {return -1};\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init() {\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if (!SoundTools.isInitialized) {\r\n            SoundTools.isInitialized = true;\r\n            for (let sound of SoundTools.sounds) {\r\n                //@ts-ignore\r\n                sound.player = new Howl({ src: [praefix + sound.url], preload: true })\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string) {\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if (st != null) {\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n    static volumeDetectionRunning: boolean = false;\r\n    public static startDetectingVolume() {\r\n        if(SoundTools.volumeDetectionRunning) return;\r\n        SoundTools.volumeDetectionRunning = true;\r\n        console.log(\"starting...\");\r\n        //@ts-ignore\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        //@ts-ignore\r\n        if (navigator.getUserMedia) {\r\n            //@ts-ignore\r\n            navigator.getUserMedia({\r\n                audio: true\r\n            },\r\n                function (stream) {\r\n                    let audioContext = new AudioContext();\r\n                    let analyser = audioContext.createAnalyser();\r\n                    let microphone = audioContext.createMediaStreamSource(stream);\r\n\r\n                    analyser.smoothingTimeConstant = 0.8;\r\n                    analyser.fftSize = 1024;\r\n\r\n                    microphone.connect(analyser);\r\n\r\n                    SoundTools.getVolume = () => {\r\n                        if(!SoundTools.volumeDetectionRunning) return 0;\r\n                        var times = new Float32Array(analyser.frequencyBinCount);\r\n                        analyser.getFloatTimeDomainData(times);\r\n                        let volume = 0;\r\n                        for (let i = 0; i < times.length; i++) {\r\n                            volume += Math.abs(times[i]);\r\n                        }\r\n                        volume = volume / times.length;\r\n                        return volume;\r\n                    };\r\n                },\r\n                function (err) {\r\n                    console.log(\"The following error occured: \" + err.name)\r\n                });\r\n        } else {\r\n            console.log(\"getUserMedia not supported\");\r\n        }\r\n    }\r\n}\r\n\r\n","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"advanced\",\r\n            // renderWhitespace: \"boundary\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n            tabSize: 3,\r\n            insertSpaces: true,\r\n            detectIndentation: false,\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        let keysWhichDontStopProgram = [\"Arrow\", \"Page\", \"ControlLeft\", \"ControlRight\"];\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                for(let kdp of keysWhichDontStopProgram){\r\n                    if(e.code.indexOf(kdp) >= 0) return;\r\n                }\r\n\r\n                if(e.code == \"KeyC\" && e.ctrlKey ) return;\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Sprites\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Spritesheet ergänzen ...\",\r\n                                action: () => {this.main.spriteManager.show()}\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","export class CacheManager {\r\n\r\n    async fetchStringFromCache(path: string): Promise<string> {\r\n        if (!this.cacheAvailable()) return null;\r\n\r\n        let cache = await this.getCache();\r\n\r\n        let value = await cache.match(path);\r\n\r\n        if(value != null){\r\n            return await value.text();\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async fetchUint8ArrayFromCache(path: string): Promise<Uint8Array> {\r\n        if (!this.cacheAvailable()) return null;\r\n\r\n        let cache = await this.getCache();\r\n\r\n        let value = await cache.match(path);\r\n\r\n        if(value != null){\r\n            return new Uint8Array(await value.arrayBuffer());\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async store(path: string, data: Uint8Array|string) {\r\n        if (!this.cacheAvailable()) return;\r\n        let that = this;\r\n        let cache = await this.getCache();\r\n            cache.put(path, new Response(data));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    async getCache(): Promise<Cache> {\r\n        return caches.open('my-cache');\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { BaseTexture } from \"pixi.js/index.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { CacheManager } from \"../tools/CacheManager.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\n\r\nexport type PixiSpritesheetData = {\r\n    frames: {\r\n        [name: string]: {\r\n            frame: { x: number, y: number, w: number, h: number },\r\n            rotated: boolean,\r\n            trimmed: boolean,\r\n            spriteSourceSize: { x: number, y: number, w: number, h: number },\r\n            sourceSize: { w: number, h: number },\r\n            pivot: { x: number, y: number }\r\n        }\r\n    },\r\n    meta: {\r\n        app: string,\r\n        version: string,\r\n        image: string,\r\n        format: \"RGBA8888\",\r\n        size: { w: number, h: number },\r\n        scale: string\r\n    }\r\n}\r\n\r\nexport class SpritesheetData {\r\n\r\n    pixiSpritesheetData: PixiSpritesheetData;\r\n    pngImageData: Uint8Array;\r\n    pngFile: Uint8Array;\r\n    zipFile: Uint8Array;\r\n\r\n    async initializeSpritesheetForWorkspace(workspace: Workspace, main: MainBase, spritesheetURL?: string){\r\n\r\n        let spriteIdentifiers: Set<string> = new Set();\r\n\r\n        if(workspace.spritesheetId != null || spritesheetURL != null ){\r\n            await this.load(workspace.spritesheetId != null ? workspace.spritesheetId : spritesheetURL);\r\n    \r\n            if(main.userSpritesheet != null){\r\n                main.userSpritesheet.destroy();\r\n                main.userSpritesheet = null;\r\n            }\r\n    \r\n            if(this.pngImageData != null && this.pixiSpritesheetData != null){\r\n                let baseTexture = PIXI.BaseTexture.fromBuffer(this.pngImageData, this.pixiSpritesheetData.meta.size.w, this.pixiSpritesheetData.meta.size.h);\r\n                main.userSpritesheet = new PIXI.Spritesheet(baseTexture, this.pixiSpritesheetData);\r\n                main.userSpritesheet.parse(() => {});\r\n                for(let identifier in this.pixiSpritesheetData.frames){\r\n                    let hashIndex = identifier.indexOf('#');\r\n                    spriteIdentifiers.add(identifier.substring(0, hashIndex));\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        let spriteLibrary = workspace.moduleStore.getBaseModule().typeStore.getType(\"SpriteLibrary\");\r\n\r\n        let identifierList: string[] = Array.from(spriteIdentifiers);\r\n\r\n        //@ts-ignore\r\n        spriteLibrary.includeUserSpritesheet(identifierList);\r\n\r\n    }\r\n\r\n\r\n    async load(spritesheetIdOrURL: number | string): Promise<void> {\r\n        if(spritesheetIdOrURL == null) return;\r\n\r\n        if(typeof spritesheetIdOrURL == \"number\"){\r\n            spritesheetIdOrURL = \"sprites/\" +   ('0' + (spritesheetIdOrURL % 256).toString(16)).slice(-2).toUpperCase() + \"/\" + spritesheetIdOrURL + \".zip\";\r\n        }\r\n\r\n        let cacheManager = new CacheManager();\r\n        this.zipFile = await cacheManager.fetchUint8ArrayFromCache(spritesheetIdOrURL);\r\n        if(this.zipFile == null){\r\n            await this.loadFromServer(spritesheetIdOrURL);\r\n            if(this.zipFile != null){\r\n                cacheManager.store(spritesheetIdOrURL, this.zipFile);\r\n            }\r\n        } \r\n\r\n        await this.unpackZip(this.zipFile)\r\n\r\n        return;\r\n    }\r\n\r\n    public unpackPngFile(){\r\n        let img = UPNG.decode(this.pngFile.buffer);\r\n        let rgba8 = UPNG.toRGBA8(img)[0];\r\n        this.pngImageData = new Uint8Array(rgba8);\r\n        this.pixiSpritesheetData.meta.size.w = img.width;\r\n        this.pixiSpritesheetData.meta.size.h = img.height;\r\n    }\r\n\r\n    private async loadFromServer(path: string):Promise<void>{\r\n        return new Promise((resolve, reject) => {\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: path,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: (arrayBuffer: ArrayBuffer) => {\r\n\r\n                    this.zipFile = new Uint8Array(arrayBuffer);\r\n                    resolve();\r\n\r\n                },\r\n                error: (jqXHR, message) => {\r\n                    alert(\"Konnte das Spritesheet nicht laden: \" + message);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    async unpackZip(zipData: File|Uint8Array) {\r\n\r\n        let pixiDataFile: any;\r\n        let pngDataFile: any;\r\n\r\n        let zip = await JSZip.loadAsync(zipData);\r\n        zip.forEach(function (relativePath, zipEntry) {  // 2) print entries\r\n            if((<string>zipEntry.name).endsWith(\".png\")) pngDataFile = zipEntry;\r\n            if((<string>zipEntry.name).endsWith(\".json\")) pixiDataFile = zipEntry;\r\n        })\r\n\r\n        this.pngFile = await pngDataFile.async(\"uint8array\");\r\n        this.pixiSpritesheetData = JSON.parse(await pixiDataFile.async(\"text\"));\r\n\r\n        this.unpackPngFile();\r\n\r\n    }\r\n\r\n    async makeZip(filename: string = \"spritesheet\") {\r\n        const zip = new JSZip();\r\n\r\n        zip.file(filename + \".png\", this.pngFile);\r\n        zip.file(filename + \".json\", JSON.stringify(this.pixiSpritesheetData), {\r\n            compression: 'DEFLATE',\r\n            compressionOptions: {level: 9}\r\n        })\r\n\r\n        this.zipFile = await zip.generateAsync({ type: \"uint8array\" });\r\n    }\r\n\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\nimport { SpritesheetData } from \"../../spritemanager/SpritesheetData.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n\r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n                {\r\n                    caption: \"Exportieren\",\r\n                    callback: (element: AccordionElement) => {\r\n                        let ws: Workspace = <Workspace>element.externalElement;\r\n                        let name: string = ws.name.replace(/\\//g, \"_\");\r\n                        downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n            let spritesheet = new SpritesheetData();\r\n            spritesheet.initializeSpritesheetForWorkspace(w, this.main).then(() => {\r\n                for (let m of nonSystemModules) {\r\n                    m.file.dirty = true;\r\n                }\r\n            });\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForDB, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch)=> ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput && this.state != InterpreterState.waitingForDB) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.divisionAssignmentInteger:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = Math.trunc(stack[stackTop - 1].value/value.value);\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput(InterpreterState.waitingForInput);\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput(newState: InterpreterState){\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(newState);\r\n        if(newState == InterpreterState.waitingForInput){\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n    }\r\n    \r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false){\r\n        if(popPriorValue) this.stack.pop();\r\n        if(value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let counts1 = counts.slice();\r\n            let n = counts1.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts1, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput, InterpreterState.waitingForDB];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch); \r\n    }\r\n\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\nimport { SpriteManager } from \"../spritemanager/SpriteManager.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n    userSpritesheet: PIXI.Spritesheet;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    spriteManager: SpriteManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        //@ts-ignore\r\n        window.UZIP = null; // needed by UPNG\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n        if(Math.random() < 0.9){\r\n            Helper.showHelper(\"spritesheetHelper\", this);\r\n        }\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n                    break;\r\n                case \"spritesheetHelper\":\r\n                    text=`Unter \"Sprites -> Spritesheet ergänzen\" können Sie eigene png-Grafikdateien hochladen und dann als Sprites verwenden. Die Sprites werden je Workspace bzw. je Repository gespeichert.\r\n                    <br><br>Die Übersicht der fest in die Online-IDE integrierten Sprites finden Sie jetzt nicht mehr im Hilfe-Menü, sondern auch hier unter \"Sprites->Sprite-Bilderübersicht\".`;\r\n                    direction = \"top\";\r\n                    $element = $('#mainmenu').find('div:contains(\"Sprites\")');\r\n                    break;\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\n\nexport class FilledShapeDefaults {\n    static defaultFillColor: number = 0x8080ff;\n    static defaultFillAlpha: number = 1.0;\n\n    static defaultBorderColor: number = null;\n    static defaultBorderAlpha: number = 1.0;\n    static defaultBorderWidth: number = 10;\n\n    static defaultVisibility: boolean = true;\n\n    static initDefaultValues(){\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\n    \n        FilledShapeDefaults.defaultBorderColor = null;\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\n        FilledShapeDefaults.defaultBorderWidth = 10;\n\n        FilledShapeDefaults.defaultVisibility = true;\n    }\n\n    static setDefaultVisibility(visibility: boolean) {\n        FilledShapeDefaults.defaultVisibility = visibility;\n    }\n\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\n\n        FilledShapeDefaults.defaultBorderWidth = width;\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultBorderColor = c.color;\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultBorderColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\n        }\n\n    }\n\n    static setDefaultFillColor(color: string | number, alpha?: number) {\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultFillColor = c.color;\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultFillColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\n        }\n\n    }\n\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let wh = module.main.getInterpreter().worldHelper;\r\n\r\n                wh?.destroyAll();\r\n\r\n            }, false, true, 'Löscht alle grafischen Objekte', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    destroyAll(){\r\n        while(this.shapes.length > 0){\r\n            // console.log(this.shapes);\r\n            // debugger;\r\n            this.shapes.pop().destroy();\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.floor(Math.random()*(bis - von + 1) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                return sh.collidesWithAnyShape(color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                let c = ColorHelper.parseColorToOpenGL(color);\r\n\r\n\r\n                return sh.collidesWithAnyShape(c.color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(color?: number): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"fillColor\"] && color != null) {\r\n                if (shapeHelper[\"fillColor\"] != color) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        this.displayObject.updateTransform();\r\n        // let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        // this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if(x < 0 || x > sh.anzahlX || y < 0 || y > sh.anzahlY){\r\n                    module.main.getInterpreter().throwException(\"Die Koordinaten \" + x + \", \" + y + \" liegen außerhalb der Bitmap mit der Auflösung \" + sh.anzahlX + \", \" + sh.anzahlY + \".\");\r\n                } else {\r\n                    sh.setzeFarbe(x, y, color, alpha);\r\n                }\r\n\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if(x < 0 || x > sh.anzahlX || y < 0 || y > sh.anzahlY){\r\n                    module.main.getInterpreter().throwException(\"Die Koordinaten \" + x + \", \" + y + \" liegen außerhalb der Bitmap mit der Auflösung \" + sh.anzahlX + \", \" + sh.anzahlY + \".\");\r\n                } else {\r\n                    sh.setzeFarbe(x, y, color);\r\n                }\r\n\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if(x < 0 || x > sh.anzahlX || y < 0 || y > sh.anzahlY){\r\n                    module.main.getInterpreter().throwException(\"Die Koordinaten \" + x + \", \" + y + \" liegen außerhalb der Bitmap mit der Auflösung \" + sh.anzahlX + \", \" + sh.anzahlY + \".\");\r\n                } else {\r\n                    sh.setzeFarbe(x, y, color);\r\n                }\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if(x < 0 || x > sh.anzahlX || y < 0 || y > sh.anzahlY){\r\n                    module.main.getInterpreter().throwException(\"Die Koordinaten \" + x + \", \" + y + \" liegen außerhalb der Bitmap mit der Auflösung \" + sh.anzahlX + \", \" + sh.anzahlY + \".\");\r\n                } else {\r\n                    sh.setzeFarbe(x, y, color, alpha);\r\n                }\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n\r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width / 2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height / 2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.transformHitPolygon();\r\n\r\n                sh.move(x - sh.hitPolygonTransformed[0].x, y - sh.hitPolygonTransformed[0].y);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n            { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"getVolume\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n        (parameters) => {\r\n            if(!SoundTools.volumeDetectionRunning) SoundTools.startDetectingVolume();\r\n            return SoundTools.getVolume();\r\n        }    \r\n        , false, true, \"Gibt die aktuelle Mikrofonlautstärke zurück. Beim ersten Aufruf muss der Benutzer dem Browser die Erlaubnis zur Benutzung des Mikrofons geben. Solange dies noch nicht erfolgt ist, gibt die Funktion den Wert -1 zurück.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                    indices.push(toIndex);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n        if(texture == null){\r\n            sheet = this.worldHelper.interpreter.main.userSpritesheet;\r\n            texture = sheet.textures[nameWithIndex];\r\n        }\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { EnumValueNode } from \"../../compiler/parser/AST.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module, SpriteLibraryClass.getSystemNodes());\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n    includeUserSpritesheet(identifiers: string[]){\r\n        let nodes = SpriteLibraryClass.getSystemNodes();\r\n        for(let id of identifiers){\r\n            nodes.push({\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: id\r\n            })\r\n        }\r\n        this.setEnumValues(nodes);\r\n    }\r\n\r\n\r\n    static getSystemNodes(): EnumValueNode[] {\r\n        return SpriteLibrary.filter(\r\n            (sle) => {\r\n                return sle.index == null || sle.index == 0\r\n            }\r\n        ).map((sle: SpriteLibraryEntry) => {\r\n            return {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: sle.name\r\n            };\r\n\r\n        })\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getFontSize\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getFontSize\")) return;\r\n\r\n                return sh.fontsize;\r\n\r\n            }, false, false, 'Gibt die Schriftgröße zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStyle\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n            this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n                { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n    \r\n                    if (sh.testdestroyed(\"moveTo\")) return;\r\n    \r\n                    sh.moveTo(x, y);\r\n    \r\n                }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean) {\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            //@ts-ignore\r\n            this.textStyle.align = this.alignment;\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    moveTo(newX: number, newY: number){\r\n        let p = new PIXI.Point(0, 0);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.localTransform.apply(p, p);\r\n        this.move(newX - p.x, newY - p.y);\r\n    }\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput || this.interpreter.state == InterpreterState.waitingForDB) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n    canvasCreated: boolean = false;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n        this.canvasCreated = true;\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        \r\n        let that = this;\r\n        this.canvasCreated = false;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n                that.p5o = p5; \r\n\r\n                let afterFinishingBoth = () => {\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                that.createCanvas(that.width, that.height);\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n       \r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"Ausführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"Taste(char)\", \"TasteGedrückt(char)\", \n    \"SonderTaste(int)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"Ausführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"Taste(char)\": \"taste\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTaste(int)\": \"sondertaste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n        this.setBaseClass(objectType);\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();  \n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n                sh.turtleSize = größe;\n                sh.moveTurtleTo(0,0, 0);\n                sh.initTurtle(0, 0, sh.angle);\n                sh.moveTurtleTo(sh.lineElements[sh.lineElements.length - 1].x, sh.lineElements[sh.lineElements.length - 1].y, sh.angle)\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(objectType);\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200).\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur so, dass der Blickwinkel der Figur in die angegebene Richtung zeigt. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Entfernt die Figur aus dem Zeichenfenster\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n    \n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element und fügt es der Figur hinzu.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Bewegt den \"Cursor\" zum nächsten Datensatz und gibt genau dann true zurück, wenn noch ein Datensatz da ist.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.size();\r\n\r\n            }, false, false, 'Gibt die Anzahl der Zeilen der Ergebnistabelle zurück.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.cursor;\r\n\r\n            }, false, false, 'Gibt den Index zurück, auf dem der \"Cursor\" in der Liste der Zeilen der Ergebnistabelle steht. Vor dem ersten Aufruf von next() wird -1 zurückgegeben.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        if(this.result == null) return false;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    size(): number {\r\n        return this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number, interpreter: Interpreter) {\r\n\r\n        if(this.cursor < 0) this.cursor = 0;\r\n\r\n        if(this.cursor >= this.result.values.length){\r\n            interpreter.throwException(\"Es wurde versucht, auf den \" + (this.cursor + 1) + \". Datensatz zuzugreifen, das ResultSet hat aber nur \" + this.result.values.length + \" Datensätze.\");\r\n            return null;\r\n        }\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"../../main/MainBase.js\";\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\n\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\n\nexport type DatabaseDirectoryEntry = {\n    name: string,\n    description: string,\n    filename: string\n}\n\nexport type QueryResult = {\n    columns: string[],\n    values: any[][],\n    buffer?: Uint8Array\n}\n\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\nexport type QueryErrorCallback = (error: string) => void;\n\nexport type ColumnStructure = {\n    name: string;\n    table: TableStructure;\n\n    typeLengths?: number[]; // for varchar(5), ...\n    completeTypeSQL: string;\n\n    references?: ColumnStructure;\n    referencesRawData?: any[];\n    isPrimaryKey: boolean;\n    isAutoIncrement: boolean;\n\n    notNull: boolean;\n    defaultValue: string;\n\n    dumpValueFunction?: (any) => string\n}\n\nexport type TableStructure = {\n    name: string;\n    size: number;\n    columns: ColumnStructure[];\n    completeSQL: string;\n}\n\nexport type DatabaseStructure = {\n    tables: TableStructure[]\n}\n\n\nexport class DatabaseTool {\n\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\n\n    worker: Worker;\n\n    queryId: number = 0;\n\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\n\n    databaseStructure: DatabaseStructure;\n\n    constructor(private main: MainBase){\n\n    }\n\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\n        \n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\n        \n            if (this.worker != null) {\n            this.worker.terminate();\n        }\n\n        let t = performance.now();\n\n        // console.log(\"Starting worker...\");\n\n        let url: string = \"js/tools/database/sqljsWorker.js\"\n        if(this.main.isEmbedded()){\n            //@ts-ignore\n            url = window.javaOnlineDir + url;\n        }\n\n        //@ts-ignore\n        if(window.jo_doc){\n            //@ts-ignore\n            this.worker = new WorkerSim();\n        } else {\n            this.worker = new Worker(url);\n        }\n        let that = this;\n\n        let error: string;\n\n        this.worker.onmessage = () => {\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\n            that.worker.onmessage = event => {\n\n                // console.log(event.data);\n\n                let id = event.data.id;\n                if (event.data.error == null) {\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\n                    if (querySuccessCallback != null) {\n                        querySuccessCallback(event.data.results);\n                    }\n                } else {\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\n                    if (queryErrorCallback != null) {\n                        queryErrorCallback(event.data.error);\n                    }\n                }\n\n                // if(event.data.buffer){\n                //     console.log(event.data.buffer);\n                // }\n\n\n                this.queryErrorCallbackMap.delete(id);\n                this.querySuccessCallbacksMap.delete(id);\n\n            };\n\n            if(queries == null) queries = [];\n            queries = queries.slice();\n            let queryCount = queries.length;\n\n            let execQuery = () => {\n                if (queries.length > 0) {\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\n                    let query = queries.shift();\n                    that.executeQuery(query, (result) => {\n                        execQuery();\n                    }, (error) => {\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\n                        console.log()\n                        execQuery();\n                    })\n                } else {\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\n                   \n                }\n            }\n\n            execQuery();\n\n        };\n\n        this.worker.onerror = (e) => {\n            error = (\"Worker error: \" + e.error);\n            console.log(\"Worker error: \" + e.error);\n        }\n\n        this.worker.postMessage({\n            id: that.queryId++,\n            action: \"open\",\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\n        });\n\n    }\n\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\n\n        let id = this.queryId++;\n\n        this.querySuccessCallbacksMap.set(id, successCallback);\n        this.queryErrorCallbackMap.set(id, errorCallback);\n\n        this.worker.postMessage({\n            id: id,\n            action: \"exec\",\n            sql: query,\n            params: {}\n        });\n\n    }\n\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\n\n        if(queries.length == 0){\n            successCallback()\n            return;\n        }\n\n        let query = queries.shift();\n\n        this.executeQuery(query, () => {\n            this.executeWriteQueries(queries, successCallback, errorCallback);\n        }, (message) => {\n            this.executeWriteQueries(queries, () => {}, (error) => {});\n            errorCallback(message); // report first error\n        });\n\n    }\n\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\n\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\n        let zlibMagicByte: number = 0x78;\n\n        let found: boolean = true;\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\n            if (sqliteMagicBytes[i] != dump[i]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) return \"binaryUncompressed\";\n\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\n\n        return \"other\";\n\n    }\n\n    close(){\n        if(this.worker != null){\n            this.worker.terminate();\n            this.worker = null;\n        }\n    }\n\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { ConnectionHelper } from \"./Connection.js\";\nimport { ResultsetHelper } from \"./ResultSet.js\";\n\n\nexport class DatabasePreparedStatementClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\n\n\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\n        ]), resultSetType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    module.main.getInterpreter().resumeAfterInput(null);\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.throwException(error);\n                    return null;\n                }\n\n\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    let rsh = new ResultsetHelper(result);\n                    let rs = new RuntimeObject(resultSetType);\n                    rs.intrinsicData[\"Helper\"] = rsh;\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\n            false));\n\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    module.main.getInterpreter().resumeAfterInput(null);\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.resumeAfterInput(null);\n                    interpreter.throwException(error);\n                    return null;\n                }\n                \n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        interpreter.resumeAfterInput(null);\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\n            false));\n\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\n\n        for (let type of types) {\n\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\n\n\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\n            ]), voidPrimitiveType,\n                (parameters) => {\n\n                    let o: RuntimeObject = parameters[0].value;\n                    let index: number = parameters[1].value;\n                    let value: any = parameters[2].value;\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                    let error = psh.setValue(value, index);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        module.main.getInterpreter().throwException(error);\n                    }\n\n                    return;\n\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\n        }\n    }\n\n}\n\n\nexport class PreparedStatementHelper {\n\n    parameterValues: string[];\n    parameterPositions: number[];\n    query: string;\n\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\n        this.query = query.trim();\n        this.prepareStatement(this.query);\n    }\n\n    prepareStatement(sql: string) {\n\n        let insideQuotation: boolean = false;\n        this.parameterPositions = [];\n\n        for (let i = 0; i < sql.length; i++) {\n\n            let c = sql.charAt(i);\n            switch (c) {\n                case \"'\": insideQuotation = !insideQuotation;\n                    break;\n                case \"?\": if (!insideQuotation) {\n                    this.parameterPositions.push(i);\n                }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        this.parameterValues = new Array(this.parameterPositions.length);\n\n    }\n\n    setValue(value: any, position: number): string {\n        if (position < 1 || position > this.parameterPositions.length) {\n            if (this.parameterPositions.length == 0) {\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\n            }\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\n        }\n\n        if(value == null){\n            this.parameterValues[position - 1] = \"null\";\n        } else\n        if (typeof value == \"string\") {\n            value = value.replace(/'/g, \"''\");\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\n        } else {\n            this.parameterValues[position - 1] = \"\" + value;\n        }\n        return;\n    }\n\n    checkQuery(): string {\n        return null;\n    }\n\n    getQueryWithParameterValuesFilledIn(): string {\n        let query = this.query;\n        let queryParts: string[] = [];\n        let pos = 0;\n\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\n            pos = this.parameterPositions[i] + 1;\n        }\n\n        if (pos < query.length) {\n            queryParts.push(query.substring(pos));\n        }\n\n        let queryWithParameterValues = \"\";\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\n        }\n\n        if (queryParts.length > this.parameterPositions.length) {\n            queryWithParameterValues += queryParts[queryParts.length - 1];\n        }\n\n        return queryWithParameterValues;\n    }\n\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null,results.length == 0 ? {columns: [], values: []} : results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\nimport { Spritesheet } from \"pixi.js/index.js\";\r\nimport { SpritesheetData } from \"../spritemanager/SpritesheetData.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string,\r\n    spritesheetURL?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    userSpritesheet: Spritesheet;\r\n    \r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.loadUserSpritesheet().then(() => {\r\n                this.compiler = new Compiler(this);\r\n                this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n                this.startTimer();\r\n            });\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    async loadUserSpritesheet(){\r\n        if(this.config.spritesheetURL != null){\r\n\r\n            let spritesheet = new SpritesheetData();\r\n\r\n            await spritesheet.initializeSpritesheetForWorkspace(this.currentWorkspace, this, this.config.spritesheetURL);\r\n    \r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').addClass('notranslate').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"names":["TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","Type","constructor","onlyFirstPass","usagePositions","Map","documentation","toTokenType","clearUsagePositions","this","PrimitiveType","initialValue","description","equals","type","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","Attribute","name","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","p","parameters","hasGenericTypes","implements","m","length","i","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","value","compute","firstOperand","secondOperand","castTo","computeId","s","map","tv","join","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","position","registerSwitchStatement","switchStatement","push","insertJumpNode","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","set","removeNode","n","indexOf","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","get","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","module","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","hasAttributes","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","c","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","filterText","command","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","replace","pushStaticInitializationPrograms","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","error","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","Math","min","shouldImplement","checkInheritance","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","lengthAttribute","intPrimitiveType","referenceElement","array","destType","s1","ObjectClass","IntPrimitiveType","init","longPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","String","fromCharCode","trunc","StringPrimitiveType","stringClass","forEach","declaration","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","RegExp","match","strings","split","values","valueOfParameterTypes","parameterType","isArray","voidPrimitiveType","longConstant","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","red","green","blue","alpha","m2","m3","ColorHelper","static","predefinedColors","substr","CompilerStatus","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","t","pushError","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","Promise","resolve","deleteOverlappingRanges","e","e1","splice","delta","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","key","keys","cssColors","style","setProperty","highlightColor","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","setEnumValues","that","vi","ordinal","getOrdinal","valueIdentifier","enumInfo","enumObject","annotation","evn","ev","ei","CodeGenerator","initStackFrameNodes","startAdhocCompilation","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","checkIfMethodOverridesFinalMethod","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","divisionAssignmentInteger","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","parse","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","expect","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","parseArrayBracketsAfterVariableIdentifier","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","modules","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","oldValue","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","getGraphicsDiv","showProgramEnd","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","spritesheetId","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements_before","new_version","rollbackDatabaseStatement","current_version","DebuggerElement","caption","children","isOpen","getLevel","getIndent","render","renderValue","initHtml","$debuggerElement","$deFirstLine","valueType","canOpen","onFirstOpening","toggleClass","stopPropagation","updateChildValues","ro","childIndex","renderListElements","de","$childContainer","removeAllChildren","typeIdentifier","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","$parentDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","evaluate","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","toExportedModule","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","addEventListener","preventDefault","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","$div","addDiv","subHeading","placeholder","buttons","$buttonRow","button","waitMessage","$message","close","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","dataTransfer","dropEffect","firstWorkspace","wse","text_before_revision","submitted_date","student_edited_after_revision","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","enabled","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","Helper","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","enable","disable","showData","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","volumeDetectionRunning","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","smoothingTimeConstant","fftSize","getVolume","times","Float32Array","frequencyBinCount","getFloatTimeDomainData","volume","abs","err","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","registerAction","active","isActive","setActive","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","showNode","initGUI","printProgram","printModuleToBottomDiv","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","programHasMethodCalls","executeInStepMode","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","showTab","consoleTop","commandEntry","resultEntry","detachValues","ce","showError","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","clearErrors","clearExceptions","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","showHomeWorkRevisionButton","hideHomeworkRevisionButton","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","showHideDbBusyIcon","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","getElementAtPosition","declarationAsString","contents","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","getCompiler","provideColorPresentations","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","detectIndentation","keysWhichDontStopProgram","onKeyDown","not_initialized","kdp","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","resolveRenameLocation","currentlyEditedModule","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","repositoryUpdateManager","repositoryCheckoutManager","spriteManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","setInterpreter","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","getSpeedInStepsPerSecond","stepsPerSecond","setSpeedInStepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","cbs","checkboxState","changed","newLibs","lib","used","fetchStringFromCache","fetchUint8ArrayFromCache","store","SpritesheetData","initializeSpritesheetForWorkspace","spritesheetURL","spriteIdentifiers","Set","load","userSpritesheet","destroy","pngImageData","pixiSpritesheetData","baseTexture","PIXI","BaseTexture","fromBuffer","meta","h","Spritesheet","frames","hashIndex","spriteLibrary","identifierList","from","includeUserSpritesheet","spritesheetIdOrURL","zipFile","loadFromServer","unpackZip","unpackPngFile","img","UPNG","decode","pngFile","rgba8","toRGBA8","zipData","pixiDataFile","pngDataFile","JSZip","loadAsync","relativePath","zipEntry","makeZip","zip","compression","compressionOptions","generateAsync","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","helperHistory","repositoryButtonDone","stop","nonSystemModules","newFileHelperDone","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","setSize","adjustSizeAndElements","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","getRoutingRectangle","appendTo","withRaster","adjustToRaster","moveTo","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","alignment","bold","italics","$group","textPosYCm","maxWidthCm","center","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","$selectElement","selected","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","adjustWidthToWorld","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","Sliders","initSliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","getRightDiv","semicolonAngel","revealLineInCenter","matchMedia","matches","login","Interpreter","initTypes","checkStartupComplete","UZIP","correctPIXITransform","utils","skipHello","Transform","prototype","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","initEditor","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","gamepad","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","waitingForDB","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","newState","oldState","popPriorValue","counts1","actionId","clearActorLists","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","addMouseListener","cursor","setCursor","destroyAll","worldObject","ratio","$containerOuter","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","belongsToGroup","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","bounds","cX","cY","apply","scaleX","scaleY","index1","getCollidingShapes","groupHelper","collidingShapes","getParentGroup","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","anzahlX","anzahlY","setzeFarbe","istFarbe","fillAll","getCopyOrClone","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","Texture","uploadData","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","KeyClass","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","startDetectingVolume","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","getSystemNodes","identifiers","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","newX","newY","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","canvasCreated","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","DirectionClass","Patcher","patch","patches","new","patchedText","KeyEvent","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","ResultsetHelper","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","db","SQL1","SQL","createDb","worker","buff","results","exec","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","querySuccessCallback","queryErrorCallback","execQuery","shift","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","DatabasePreparedStatementClass","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","skipNextServerSentStatement","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","BaseModule","GNGModule","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","getFirstModule","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","loadUserSpritesheet","$parent","$window","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules"],"sourceRoot":""}